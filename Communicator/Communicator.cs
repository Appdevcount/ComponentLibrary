using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Net.Mail;
using System.Text;
using System.Threading.Tasks;

namespace Communicator
{
    public class Communicator
    {
        CommunicatorResponse CR = new CommunicatorResponse() { Status = false };

        public CommunicatorResponse SendEmail(string ToEmailId, string Subject, bool IsHTMLBody, 
            string MessageBody, string MobileNum, string FirstName, string LastName, 
            string FromEmailId,string FromEmailPassword,string FromEmailDomain, string SenderSignature, string ExcahangeServer,
            int ExchangePort,string SenderEmailDisplayName)

        //        (string ToEmailId, endEmail
        //string emailKeyVal,
        //string Name, string NotificationType = "", string ServiceNameEng = "", string ServiceNameAra = "", string Status = "",
        //string Subject = "Kuwait eCustoms Services Email Verification Code",
        //string BodyHtmlFile = "~/EmailTempt.htm")
        {

            #region test
            //string smtpAddress = "smtp.gmail.com";
            //int portNumber = 587;
            //bool enableSSL = true;
            //string emailFromAddress = "testappforall1@gmail.com"; //Sender Email Address 
            //string password = "Password@123"; //Sender Password 
            //string emailToAddress = "sruknudeen@agility.com"; //Receiver Email Address 
            //string subject = "Hello";
            //string body = "Hello, This is Email sending test using gmail.";
            #endregion test


            try
            {

                MailMessage objeto_mail = new MailMessage();
                SmtpClient client = new SmtpClient();
                client.EnableSsl = true;
                client.Timeout = 10000;
                client.DeliveryMethod = SmtpDeliveryMethod.Network;
                client.UseDefaultCredentials = false;
                client.Credentials = new System.Net.NetworkCredential(FromEmailId, FromEmailPassword, FromEmailDomain);
                objeto_mail.From = new MailAddress(FromEmailId);
                objeto_mail.To.Add(new MailAddress(ToEmailId, SenderEmailDisplayName));// "oru copany oda peru"));
                objeto_mail.Subject = Subject;

                objeto_mail.IsBodyHtml = IsHTMLBody;

                if (IsHTMLBody)
                {
                    client.Port = ExchangePort;// 25;
                    client.Host = ExcahangeServer;// 10.10.165.13

                    //FileStream fsreader = new FileStream(System.Web.HttpContext.Current.Server.MapPath(BodyHtmlFile), FileMode.OpenOrCreate, FileAccess.Read, FileShare.ReadWrite);
                    //StreamReader reader = new StreamReader(fsreader);
                    //string fileContent = reader.ReadToEnd();
                    //reader.Dispose();
                    //fsreader.Dispose();

                    //fileContent = fileContent.Replace("#0", Name);
                    //fileContent = fileContent.Replace("#1", emailKeyVal);
                    //fileContent = fileContent.Replace("#2", ServiceNameEng);
                    //fileContent = fileContent.Replace("#3", Status);
                    //fileContent = fileContent.Replace("#4", DateTime.Now.ToString());

                    //objeto_mail.Body = fileContent;

                    //var inlineLogo = new LinkedResource(System.Web.HttpContext.Current.Server.MapPath("~/eTrade.png"));
                    //inlineLogo.ContentId = "DFFD1A8F-5393-4A67-9531-CBA0854B00D2";

                    //var view = AlternateView.CreateAlternateViewFromString(objeto_mail.Body, null, "text/html");
                    //view.LinkedResources.Add(inlineLogo);
                    //objeto_mail.AlternateViews.Add(view);

                    objeto_mail.Body = MessageBody;
                }
                else
                {
                    objeto_mail.Body = "Hello " + Name + ", <br /><br />Welcome to the eTrade.<br /><br />Your eTrade EMail verification code is : <b>" + emailKeyVal + "</b><br /> <br /> <br />This is an autogenerated email. Please do not reply to this Email.<br /> <br /><br />Best Regards<br /><b>Kuwait  Administration of Cuss</b></br><b>eTrade team</b>";

                }




                client.Send(objeto_mail);

                CR.Status = true;
                return CR;
            }
            catch (Exception ex)
            {
                CR.Message = ex.Message.ToString();
                return CR;
            }

        }

    }

    public class CommunicatorResponse
    {
        public bool Status { get; set; }
        public string Message { get; set; }
    }
}
